diff --git a/commands/core/site_install.drush.inc b/commands/core/site_install.drush.inc
index 2c8a336..56e1991 100644
--- a/commands/core/site_install.drush.inc
+++ b/commands/core/site_install.drush.inc
@@ -40,6 +40,10 @@ function site_install_drush_command() {
         'description' => 'Password for the "db-su" account. Optional.',
         'example-value' => 'pass',
       ),
+      'db-drop-existing-tables' => array(
+         'description' => 'Remove all tables in the target database before creating Drupal tables. Defaults to TRUE.',
+         'example-value' => '0',
+      ),
       'account-name' => 'uid1 name. Defaults to admin',
       'account-pass' => 'uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.',
       'account-mail' => 'uid1 email. Defaults to admin@example.com',
@@ -148,12 +152,15 @@ function drush_core_pre_site_install($profile = NULL) {
   if ($sitesfile_write) {
     $msg[] = dt('create a @sitesfile file', array('@sitesfile' => $sitesfile));
   }
-  if ($sql->db_exists()) {
+  if ($sql->db_exists() && drush_get_option('db-drop-existing-tables', TRUE)) {
     $msg[] = dt("DROP all tables in your '@db' database.", array('@db' => $db_spec['database']));
   }
-  else {
+  elseif (!$sql->db_exists()) {
     $msg[] = dt("CREATE the '@db' database.", array('@db' => $db_spec['database']));
   }
+  elseif (drush_get_option('db-drop-existing-tables', FALSE)) {
+    $msg[] = dt("Add site to the '@db' database using a prefix.", array('@db' => $db_spec['database']));
+  }
 
   if (!drush_confirm(dt('You are about to ') . implode(dt(' and '), $msg) . ' Do you want to continue?')) {
     return drush_user_abort();
@@ -212,7 +219,10 @@ function drush_core_pre_site_install($profile = NULL) {
     drush_bootstrap(DRUSH_BOOTSTRAP_DRUPAL_SITE);
   }
 
-  if (!$sql->drop_or_create($db_spec)) {
+  if (drush_get_option('db-drop-existing-tables', TRUE) && !$sql->drop_or_create($db_spec)) {
+    return drush_set_error(dt('Failed to create database: @error', array('@error' => implode(drush_shell_exec_output()))));
+  }
+  elseif(!$sql->db_exists() && !$sql->createdb($db_spec)) {
     return drush_set_error(dt('Failed to create database: @error', array('@error' => implode(drush_shell_exec_output()))));
   }
 
